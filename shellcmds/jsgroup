#!/usr/bin/env jspython
from JumpScale import j
from JumpScale.baselib import cmdutils

import sys,time

j.application.start("jsgroup")

parser = cmdutils.ArgumentParser()
parser.add_argument("action", choices=['add','delete','list'], help='Command to perform')
parser.add_argument("-d",'--data', help='add group as groupname:domain')
parser.add_argument("-gl",'--group', help='groupname')
parser.add_argument("-gd",'--domain', help='domain for group to list')

#parser.add_argument('--force',required=False, action='store_true',help='dont ask yes, do immediate')
#parser.add_argument('--debug',required=False, action='store_true',help='will stop on errors and show all relevant info')

import JumpScale.grid.osis

opts=cmdutils.processLogin(parser)


opts = parser.parse_args()

# if opts.passwd==None:

#     if j.application.config.exists("grid.master.superadminpasswd"):
#         opts.passwd=j.application.config.get("grid.master.superadminpasswd")
#     else:
#         opts.passwd=j.console.askString("please provide superadmin passwd for the grid.")

# if opts.addr==None:    
#     addr=j.application.config.get("grid.master.ip")
# else:
#     addr=opts.addr

osis=j.core.osis.getClientByInstance('main')
userclient=j.core.osis.getClientForCategory(osis,"system","user")
groupclient=j.core.osis.getClientForCategory(osis,"system","group")

############ADD
if opts.action =='add':
    if opts.data<>None:
        splitted=opts.data.split(":")
        if len(splitted)<>2:
            raise RuntimeError("error, format for param data needs to be: groupname:domain")
        name,domain=splitted
    else:
        name=j.console.askString("name")
        domain=j.console.askString("domain e.g. incubaid.com")

    if groupclient.exists(name):
        raise RuntimeError("group already exists")

    group=groupclient.new()
    group.id=name
    group.domain=domain

    guid,a,b=groupclient.set(group)

    group=groupclient.get(guid)

    print group


if opts.action =='list':
    out=""
    print "\n%-20s %-25s %s"%("name","domain","users")
    print "="*80,
    for item in groupclient.simpleSearch({"domain":opts.domain}):
        out+="%-20s %-25s %s\n"%(item["id"],item["domain"],",".join(item["users"]))
    out=out.split("\n")
    out.sort()
    out="\n".join(out)
    print out
    print
            
if opts.action =='delete':
    if opts.group==None:
        opts.group=j.console.askString("group to delete")
    group=groupclient.get("%s_%s"%(j.application.whoAmI.gid,opts.group))
    groupclient.delete(group.guid)

j.application.stop()
