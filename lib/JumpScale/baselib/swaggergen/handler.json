{
    "requires": [
        "turbo"
    ], 
    "port": 80, 
    "handlers": [
        {
            "path": "/api/users/logout", 
            "name": "userslogout", 
            "methods": [
                {
                    "type": "get", 
                    "params": {}, 
                    "responses": [
                        {
                            "code": "default", 
                            "description": "successful operation"
                        }
                    ], 
                    "summary": "Logs out current logged in user session"
                }
            ]
        }, 
        {
            "path": "/api/users/login", 
            "name": "userslogin", 
            "methods": [
                {
                    "type": "get", 
                    "params": {
                        "body": {}, 
                        "query": [
                            {
                                "isArray": false, 
                                "required": false, 
                                "type": "string", 
                                "name": "username"
                            }, 
                            {
                                "isArray": false, 
                                "required": false, 
                                "type": "string", 
                                "name": "password"
                            }
                        ], 
                        "formData": [], 
                        "header": [], 
                        "path": []
                    }, 
                    "responses": [
                        {
                            "code": "200", 
                            "description": "successful operation", 
                            "schema": {
                                "type": "string"
                            }
                        }, 
                        {
                            "code": "400", 
                            "description": "Invalid username/password supplied"
                        }
                    ], 
                    "summary": "Logs user into the system"
                }
            ]
        }, 
        {
            "path": "/api/users/createWithList", 
            "name": "userscreateWithList", 
            "methods": [
                {
                    "type": "post", 
                    "params": {
                        "body": {
                            "isArray": false, 
                            "required": false, 
                            "schema": {
                                "properties": {
                                    "username": {
                                        "type": "string"
                                    }, 
                                    "firstName": {
                                        "type": "string"
                                    }, 
                                    "lastName": {
                                        "type": "string"
                                    }, 
                                    "userStatus": {
                                        "type": "integer", 
                                        "description": "User Status", 
                                        "format": "int32"
                                    }, 
                                    "email": {
                                        "type": "string"
                                    }, 
                                    "phone": {
                                        "type": "string"
                                    }, 
                                    "password": {
                                        "type": "string"
                                    }, 
                                    "id": {
                                        "type": "integer", 
                                        "format": "int64"
                                    }
                                }
                            }
                        }, 
                        "query": [], 
                        "formData": [], 
                        "header": [], 
                        "path": []
                    }, 
                    "responses": [
                        {
                            "code": "default", 
                            "description": "successful operation"
                        }
                    ], 
                    "summary": "Creates list of users with given input array"
                }
            ]
        }, 
        {
            "path": "/api/users/createWithArray", 
            "name": "userscreateWithArray", 
            "methods": [
                {
                    "type": "post", 
                    "params": {
                        "body": {
                            "isArray": false, 
                            "required": false, 
                            "schema": {
                                "properties": {
                                    "username": {
                                        "type": "string"
                                    }, 
                                    "firstName": {
                                        "type": "string"
                                    }, 
                                    "lastName": {
                                        "type": "string"
                                    }, 
                                    "userStatus": {
                                        "type": "integer", 
                                        "description": "User Status", 
                                        "format": "int32"
                                    }, 
                                    "email": {
                                        "type": "string"
                                    }, 
                                    "phone": {
                                        "type": "string"
                                    }, 
                                    "password": {
                                        "type": "string"
                                    }, 
                                    "id": {
                                        "type": "integer", 
                                        "format": "int64"
                                    }
                                }
                            }
                        }, 
                        "query": [], 
                        "formData": [], 
                        "header": [], 
                        "path": []
                    }, 
                    "responses": [
                        {
                            "code": "default", 
                            "description": "successful operation"
                        }
                    ], 
                    "summary": "Creates list of users with given input array"
                }
            ]
        }, 
        {
            "path": "/api/users/(.*)", 
            "name": "usersusername", 
            "methods": [
                {
                    "type": "put", 
                    "params": {
                        "body": {
                            "isArray": false, 
                            "required": false, 
                            "schema": {
                                "properties": {
                                    "username": {
                                        "type": "string"
                                    }, 
                                    "firstName": {
                                        "type": "string"
                                    }, 
                                    "lastName": {
                                        "type": "string"
                                    }, 
                                    "userStatus": {
                                        "type": "integer", 
                                        "description": "User Status", 
                                        "format": "int32"
                                    }, 
                                    "email": {
                                        "type": "string"
                                    }, 
                                    "phone": {
                                        "type": "string"
                                    }, 
                                    "password": {
                                        "type": "string"
                                    }, 
                                    "id": {
                                        "type": "integer", 
                                        "format": "int64"
                                    }
                                }
                            }
                        }, 
                        "query": [], 
                        "formData": [], 
                        "header": [], 
                        "path": [
                            {
                                "isArray": false, 
                                "required": true, 
                                "type": "string", 
                                "name": "username"
                            }
                        ]
                    }, 
                    "responses": [
                        {
                            "code": "404", 
                            "description": "User not found"
                        }, 
                        {
                            "code": "400", 
                            "description": "Invalid user supplied"
                        }
                    ], 
                    "summary": "Updated user"
                }, 
                {
                    "type": "delete", 
                    "params": {
                        "body": {}, 
                        "query": [], 
                        "formData": [], 
                        "header": [], 
                        "path": [
                            {
                                "isArray": false, 
                                "required": true, 
                                "type": "string", 
                                "name": "username"
                            }
                        ]
                    }, 
                    "responses": [
                        {
                            "code": "404", 
                            "description": "User not found"
                        }, 
                        {
                            "code": "400", 
                            "description": "Invalid username supplied"
                        }
                    ], 
                    "summary": "Delete user"
                }, 
                {
                    "type": "get", 
                    "params": {
                        "body": {}, 
                        "query": [], 
                        "formData": [], 
                        "header": [], 
                        "path": [
                            {
                                "isArray": false, 
                                "required": true, 
                                "type": "string", 
                                "name": "username"
                            }
                        ]
                    }, 
                    "responses": [
                        {
                            "code": "200", 
                            "description": "successful operation", 
                            "schema": {
                                "properties": {
                                    "username": {
                                        "type": "string"
                                    }, 
                                    "firstName": {
                                        "type": "string"
                                    }, 
                                    "lastName": {
                                        "type": "string"
                                    }, 
                                    "userStatus": {
                                        "type": "integer", 
                                        "description": "User Status", 
                                        "format": "int32"
                                    }, 
                                    "email": {
                                        "type": "string"
                                    }, 
                                    "phone": {
                                        "type": "string"
                                    }, 
                                    "password": {
                                        "type": "string"
                                    }, 
                                    "id": {
                                        "type": "integer", 
                                        "format": "int64"
                                    }
                                }
                            }
                        }, 
                        {
                            "code": "404", 
                            "description": "User not found"
                        }, 
                        {
                            "code": "400", 
                            "description": "Invalid username supplied"
                        }
                    ], 
                    "summary": "Get user by user name"
                }
            ]
        }, 
        {
            "path": "/api/users", 
            "name": "users", 
            "methods": [
                {
                    "type": "post", 
                    "params": {
                        "body": {
                            "isArray": false, 
                            "required": false, 
                            "schema": {
                                "properties": {
                                    "username": {
                                        "type": "string"
                                    }, 
                                    "firstName": {
                                        "type": "string"
                                    }, 
                                    "lastName": {
                                        "type": "string"
                                    }, 
                                    "userStatus": {
                                        "type": "integer", 
                                        "description": "User Status", 
                                        "format": "int32"
                                    }, 
                                    "email": {
                                        "type": "string"
                                    }, 
                                    "phone": {
                                        "type": "string"
                                    }, 
                                    "password": {
                                        "type": "string"
                                    }, 
                                    "id": {
                                        "type": "integer", 
                                        "format": "int64"
                                    }
                                }
                            }
                        }, 
                        "query": [], 
                        "formData": [], 
                        "header": [], 
                        "path": []
                    }, 
                    "responses": [
                        {
                            "code": "default", 
                            "description": "successful operation"
                        }
                    ], 
                    "summary": "Create user"
                }
            ]
        }, 
        {
            "path": "/api/stores/order/(.*)", 
            "name": "storesorderorderId", 
            "methods": [
                {
                    "type": "delete", 
                    "params": {
                        "body": {}, 
                        "query": [], 
                        "formData": [], 
                        "header": [], 
                        "path": [
                            {
                                "isArray": false, 
                                "required": true, 
                                "type": "string", 
                                "name": "orderId"
                            }
                        ]
                    }, 
                    "responses": [
                        {
                            "code": "404", 
                            "description": "Order not found"
                        }, 
                        {
                            "code": "400", 
                            "description": "Invalid ID supplied"
                        }
                    ], 
                    "summary": "Delete purchase order by ID"
                }, 
                {
                    "type": "get", 
                    "params": {
                        "body": {}, 
                        "query": [], 
                        "formData": [], 
                        "header": [], 
                        "path": [
                            {
                                "isArray": false, 
                                "required": true, 
                                "type": "string", 
                                "name": "orderId"
                            }
                        ]
                    }, 
                    "responses": [
                        {
                            "code": "200", 
                            "description": "successful operation", 
                            "schema": {
                                "properties": {
                                    "status": {
                                        "type": "string", 
                                        "description": "Order Status"
                                    }, 
                                    "shipDate": {
                                        "type": "string", 
                                        "format": "date-time"
                                    }, 
                                    "complete": {
                                        "type": "boolean"
                                    }, 
                                    "petId": {
                                        "type": "integer", 
                                        "format": "int64"
                                    }, 
                                    "id": {
                                        "type": "integer", 
                                        "format": "int64"
                                    }, 
                                    "quantity": {
                                        "type": "integer", 
                                        "format": "int32"
                                    }
                                }
                            }
                        }, 
                        {
                            "code": "404", 
                            "description": "Order not found"
                        }, 
                        {
                            "code": "400", 
                            "description": "Invalid ID supplied"
                        }
                    ], 
                    "summary": "Find purchase order by ID"
                }
            ]
        }, 
        {
            "path": "/api/stores/order", 
            "name": "storesorder", 
            "methods": [
                {
                    "type": "post", 
                    "params": {
                        "body": {
                            "isArray": false, 
                            "required": false, 
                            "schema": {
                                "properties": {
                                    "status": {
                                        "type": "string", 
                                        "description": "Order Status"
                                    }, 
                                    "shipDate": {
                                        "type": "string", 
                                        "format": "date-time"
                                    }, 
                                    "complete": {
                                        "type": "boolean"
                                    }, 
                                    "petId": {
                                        "type": "integer", 
                                        "format": "int64"
                                    }, 
                                    "id": {
                                        "type": "integer", 
                                        "format": "int64"
                                    }, 
                                    "quantity": {
                                        "type": "integer", 
                                        "format": "int32"
                                    }
                                }
                            }
                        }, 
                        "query": [], 
                        "formData": [], 
                        "header": [], 
                        "path": []
                    }, 
                    "responses": [
                        {
                            "code": "200", 
                            "description": "successful operation", 
                            "schema": {
                                "properties": {
                                    "status": {
                                        "type": "string", 
                                        "description": "Order Status"
                                    }, 
                                    "shipDate": {
                                        "type": "string", 
                                        "format": "date-time"
                                    }, 
                                    "complete": {
                                        "type": "boolean"
                                    }, 
                                    "petId": {
                                        "type": "integer", 
                                        "format": "int64"
                                    }, 
                                    "id": {
                                        "type": "integer", 
                                        "format": "int64"
                                    }, 
                                    "quantity": {
                                        "type": "integer", 
                                        "format": "int32"
                                    }
                                }
                            }
                        }, 
                        {
                            "code": "400", 
                            "description": "Invalid Order"
                        }
                    ], 
                    "summary": "Place an order for a pet"
                }
            ]
        }, 
        {
            "path": "/api/pets/findByTags", 
            "name": "petsfindByTags", 
            "methods": [
                {
                    "type": "get", 
                    "params": {
                        "body": {}, 
                        "query": [
                            {
                                "isArray": false, 
                                "required": false, 
                                "type": "array", 
                                "name": "tags"
                            }
                        ], 
                        "formData": [], 
                        "header": [], 
                        "path": []
                    }, 
                    "responses": [
                        {
                            "code": "200", 
                            "description": "successful operation", 
                            "schema": {
                                "items": {
                                    "$ref": "#/definitions/Pet"
                                }, 
                                "type": "array"
                            }
                        }, 
                        {
                            "code": "400", 
                            "description": "Invalid tag value"
                        }
                    ], 
                    "summary": "Finds Pets by tags"
                }
            ]
        }, 
        {
            "path": "/api/pets/findByStatus", 
            "name": "petsfindByStatus", 
            "methods": [
                {
                    "type": "get", 
                    "params": {
                        "body": {}, 
                        "query": [
                            {
                                "isArray": false, 
                                "required": false, 
                                "type": "array", 
                                "name": "status"
                            }
                        ], 
                        "formData": [], 
                        "header": [], 
                        "path": []
                    }, 
                    "responses": [
                        {
                            "code": "200", 
                            "description": "successful operation", 
                            "schema": {
                                "items": {
                                    "$ref": "#/definitions/Pet"
                                }, 
                                "type": "array"
                            }
                        }, 
                        {
                            "code": "400", 
                            "description": "Invalid status value"
                        }
                    ], 
                    "summary": "Finds Pets by status"
                }
            ]
        }, 
        {
            "path": "/api/pets/(.*)", 
            "name": "petspetId", 
            "methods": [
                {
                    "type": "post", 
                    "params": {
                        "body": {}, 
                        "query": [], 
                        "formData": [
                            {
                                "isArray": false, 
                                "required": true, 
                                "type": "string", 
                                "name": "name"
                            }, 
                            {
                                "isArray": false, 
                                "required": true, 
                                "type": "string", 
                                "name": "status"
                            }
                        ], 
                        "header": [], 
                        "path": [
                            {
                                "isArray": false, 
                                "required": true, 
                                "type": "string", 
                                "name": "petId"
                            }
                        ]
                    }, 
                    "responses": [
                        {
                            "code": "405", 
                            "description": "Invalid input"
                        }
                    ], 
                    "summary": "Updates a pet in the store with form data"
                }, 
                {
                    "type": "delete", 
                    "params": {
                        "body": {}, 
                        "query": [], 
                        "formData": [], 
                        "header": [
                            {
                                "isArray": false, 
                                "required": true, 
                                "type": "string", 
                                "name": "api_key"
                            }
                        ], 
                        "path": [
                            {
                                "isArray": false, 
                                "required": true, 
                                "type": "integer", 
                                "name": "petId"
                            }
                        ]
                    }, 
                    "responses": [
                        {
                            "code": "400", 
                            "description": "Invalid pet value"
                        }
                    ], 
                    "summary": "Deletes a pet"
                }, 
                {
                    "type": "get", 
                    "params": {
                        "body": {}, 
                        "query": [], 
                        "formData": [], 
                        "header": [], 
                        "path": [
                            {
                                "isArray": false, 
                                "required": true, 
                                "type": "integer", 
                                "name": "petId"
                            }
                        ]
                    }, 
                    "responses": [
                        {
                            "code": "200", 
                            "description": "successful operation", 
                            "schema": {
                                "required": [
                                    "name", 
                                    "photoUrls"
                                ], 
                                "properties": {
                                    "category": {
                                        "properties": {
                                            "id": {
                                                "type": "integer", 
                                                "format": "int64"
                                            }, 
                                            "name": {
                                                "type": "string"
                                            }
                                        }
                                    }, 
                                    "status": {
                                        "type": "string", 
                                        "description": "pet status in the store"
                                    }, 
                                    "name": {
                                        "type": "string", 
                                        "example": "doggie"
                                    }, 
                                    "tags": {
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer", 
                                                    "format": "int64"
                                                }, 
                                                "name": {
                                                    "type": "string"
                                                }
                                            }
                                        }, 
                                        "type": "array"
                                    }, 
                                    "photoUrls": {
                                        "items": {
                                            "type": "string"
                                        }, 
                                        "type": "array"
                                    }, 
                                    "id": {
                                        "type": "integer", 
                                        "format": "int64"
                                    }
                                }
                            }
                        }, 
                        {
                            "code": "404", 
                            "description": "Pet not found"
                        }, 
                        {
                            "code": "400", 
                            "description": "Invalid ID supplied"
                        }
                    ], 
                    "summary": "Find pet by ID"
                }
            ]
        }, 
        {
            "path": "/api/pets", 
            "name": "pets", 
            "methods": [
                {
                    "type": "put", 
                    "params": {
                        "body": {
                            "isArray": false, 
                            "required": false, 
                            "schema": {
                                "required": [
                                    "name", 
                                    "photoUrls"
                                ], 
                                "properties": {
                                    "category": {
                                        "properties": {
                                            "id": {
                                                "type": "integer", 
                                                "format": "int64"
                                            }, 
                                            "name": {
                                                "type": "string"
                                            }
                                        }
                                    }, 
                                    "status": {
                                        "type": "string", 
                                        "description": "pet status in the store"
                                    }, 
                                    "name": {
                                        "type": "string", 
                                        "example": "doggie"
                                    }, 
                                    "tags": {
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer", 
                                                    "format": "int64"
                                                }, 
                                                "name": {
                                                    "type": "string"
                                                }
                                            }
                                        }, 
                                        "type": "array"
                                    }, 
                                    "photoUrls": {
                                        "items": {
                                            "type": "string"
                                        }, 
                                        "type": "array"
                                    }, 
                                    "id": {
                                        "type": "integer", 
                                        "format": "int64"
                                    }
                                }
                            }
                        }, 
                        "query": [], 
                        "formData": [], 
                        "header": [], 
                        "path": []
                    }, 
                    "responses": [
                        {
                            "code": "405", 
                            "description": "Validation exception"
                        }, 
                        {
                            "code": "404", 
                            "description": "Pet not found"
                        }, 
                        {
                            "code": "400", 
                            "description": "Invalid ID supplied"
                        }
                    ], 
                    "summary": "Update an existing pet"
                }, 
                {
                    "type": "post", 
                    "params": {
                        "body": {
                            "isArray": false, 
                            "required": false, 
                            "schema": {
                                "required": [
                                    "name", 
                                    "photoUrls"
                                ], 
                                "properties": {
                                    "category": {
                                        "properties": {
                                            "id": {
                                                "type": "integer", 
                                                "format": "int64"
                                            }, 
                                            "name": {
                                                "type": "string"
                                            }
                                        }
                                    }, 
                                    "status": {
                                        "type": "string", 
                                        "description": "pet status in the store"
                                    }, 
                                    "name": {
                                        "type": "string", 
                                        "example": "doggie"
                                    }, 
                                    "tags": {
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer", 
                                                    "format": "int64"
                                                }, 
                                                "name": {
                                                    "type": "string"
                                                }
                                            }
                                        }, 
                                        "type": "array"
                                    }, 
                                    "photoUrls": {
                                        "items": {
                                            "type": "string"
                                        }, 
                                        "type": "array"
                                    }, 
                                    "id": {
                                        "type": "integer", 
                                        "format": "int64"
                                    }
                                }
                            }
                        }, 
                        "query": [], 
                        "formData": [], 
                        "header": [], 
                        "path": []
                    }, 
                    "responses": [
                        {
                            "code": "405", 
                            "description": "Invalid input"
                        }
                    ], 
                    "summary": "Add a new pet to the store"
                }
            ]
        }
    ]
}