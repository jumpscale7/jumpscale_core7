[
    {
        "path": "/api/users/logout", 
        "name": "userslogout", 
        "methods": [
            {
                "args": {}, 
                "responses": [
                    {
                        "code": "default", 
                        "description": "successful operation"
                    }
                ], 
                "name": "get", 
                "summary": "Logs out current logged in user session"
            }
        ]
    }, 
    {
        "path": "/api/users/login", 
        "name": "userslogin", 
        "methods": [
            {
                "args": {
                    "body": [], 
                    "query": [
                        {
                            "description": "The user name for login", 
                            "required": false, 
                            "type": "string", 
                            "name": "username", 
                            "in": "query"
                        }, 
                        {
                            "description": "The password for login in clear text", 
                            "required": false, 
                            "type": "string", 
                            "name": "password", 
                            "in": "query"
                        }
                    ], 
                    "formData": [], 
                    "header": [], 
                    "path": []
                }, 
                "responses": [
                    {
                        "code": "200", 
                        "description": "successful operation", 
                        "schema": {
                            "type": "string"
                        }
                    }, 
                    {
                        "code": "400", 
                        "description": "Invalid username/password supplied"
                    }
                ], 
                "name": "get", 
                "summary": "Logs user into the system"
            }
        ]
    }, 
    {
        "path": "/api/users/createWithList", 
        "name": "userscreateWithList", 
        "methods": [
            {
                "args": {
                    "body": [
                        {
                            "schema": {
                                "items": {
                                    "$ref": "#/definitions/User"
                                }, 
                                "type": "array"
                            }, 
                            "description": "List of user object", 
                            "required": false, 
                            "name": "body", 
                            "in": "body"
                        }
                    ], 
                    "query": [], 
                    "formData": [], 
                    "header": [], 
                    "path": []
                }, 
                "responses": [
                    {
                        "code": "default", 
                        "description": "successful operation"
                    }
                ], 
                "name": "post", 
                "summary": "Creates list of users with given input array"
            }
        ]
    }, 
    {
        "path": "/api/users/createWithArray", 
        "name": "userscreateWithArray", 
        "methods": [
            {
                "args": {
                    "body": [
                        {
                            "schema": {
                                "items": {
                                    "$ref": "#/definitions/User"
                                }, 
                                "type": "array"
                            }, 
                            "description": "List of user object", 
                            "required": false, 
                            "name": "body", 
                            "in": "body"
                        }
                    ], 
                    "query": [], 
                    "formData": [], 
                    "header": [], 
                    "path": []
                }, 
                "responses": [
                    {
                        "code": "default", 
                        "description": "successful operation"
                    }
                ], 
                "name": "post", 
                "summary": "Creates list of users with given input array"
            }
        ]
    }, 
    {
        "path": "/api/users/(.*)", 
        "name": "usersusername", 
        "methods": [
            {
                "args": {
                    "body": [
                        {
                            "schema": {
                                "properties": {
                                    "username": {
                                        "type": "string"
                                    }, 
                                    "firstName": {
                                        "type": "string"
                                    }, 
                                    "lastName": {
                                        "type": "string"
                                    }, 
                                    "userStatus": {
                                        "type": "integer", 
                                        "description": "User Status", 
                                        "format": "int32"
                                    }, 
                                    "email": {
                                        "type": "string"
                                    }, 
                                    "phone": {
                                        "type": "string"
                                    }, 
                                    "password": {
                                        "type": "string"
                                    }, 
                                    "id": {
                                        "type": "integer", 
                                        "format": "int64"
                                    }
                                }
                            }, 
                            "description": "Updated user object", 
                            "required": false, 
                            "name": "body", 
                            "in": "body"
                        }
                    ], 
                    "query": [], 
                    "formData": [], 
                    "header": [], 
                    "path": [
                        {
                            "description": "name that need to be deleted", 
                            "required": true, 
                            "type": "string", 
                            "name": "username", 
                            "in": "path"
                        }
                    ]
                }, 
                "responses": [
                    {
                        "code": "404", 
                        "description": "User not found"
                    }, 
                    {
                        "code": "400", 
                        "description": "Invalid user supplied"
                    }
                ], 
                "name": "put", 
                "summary": "Updated user"
            }, 
            {
                "args": {
                    "body": [], 
                    "query": [], 
                    "formData": [], 
                    "header": [], 
                    "path": [
                        {
                            "description": "The name that needs to be deleted", 
                            "required": true, 
                            "type": "string", 
                            "name": "username", 
                            "in": "path"
                        }
                    ]
                }, 
                "responses": [
                    {
                        "code": "404", 
                        "description": "User not found"
                    }, 
                    {
                        "code": "400", 
                        "description": "Invalid username supplied"
                    }
                ], 
                "name": "delete", 
                "summary": "Delete user"
            }, 
            {
                "args": {
                    "body": [], 
                    "query": [], 
                    "formData": [], 
                    "header": [], 
                    "path": [
                        {
                            "description": "The name that needs to be fetched. Use user1 for testing.", 
                            "required": true, 
                            "type": "string", 
                            "name": "username", 
                            "in": "path"
                        }
                    ]
                }, 
                "responses": [
                    {
                        "code": "200", 
                        "description": "successful operation", 
                        "schema": {
                            "properties": {
                                "username": {
                                    "type": "string"
                                }, 
                                "firstName": {
                                    "type": "string"
                                }, 
                                "lastName": {
                                    "type": "string"
                                }, 
                                "userStatus": {
                                    "type": "integer", 
                                    "description": "User Status", 
                                    "format": "int32"
                                }, 
                                "email": {
                                    "type": "string"
                                }, 
                                "phone": {
                                    "type": "string"
                                }, 
                                "password": {
                                    "type": "string"
                                }, 
                                "id": {
                                    "type": "integer", 
                                    "format": "int64"
                                }
                            }
                        }
                    }, 
                    {
                        "code": "404", 
                        "description": "User not found"
                    }, 
                    {
                        "code": "400", 
                        "description": "Invalid username supplied"
                    }
                ], 
                "name": "get", 
                "summary": "Get user by user name"
            }
        ]
    }, 
    {
        "path": "/api/users", 
        "name": "users", 
        "methods": [
            {
                "args": {
                    "body": [
                        {
                            "schema": {
                                "properties": {
                                    "username": {
                                        "type": "string"
                                    }, 
                                    "firstName": {
                                        "type": "string"
                                    }, 
                                    "lastName": {
                                        "type": "string"
                                    }, 
                                    "userStatus": {
                                        "type": "integer", 
                                        "description": "User Status", 
                                        "format": "int32"
                                    }, 
                                    "email": {
                                        "type": "string"
                                    }, 
                                    "phone": {
                                        "type": "string"
                                    }, 
                                    "password": {
                                        "type": "string"
                                    }, 
                                    "id": {
                                        "type": "integer", 
                                        "format": "int64"
                                    }
                                }
                            }, 
                            "description": "Created user object", 
                            "required": false, 
                            "name": "body", 
                            "in": "body"
                        }
                    ], 
                    "query": [], 
                    "formData": [], 
                    "header": [], 
                    "path": []
                }, 
                "responses": [
                    {
                        "code": "default", 
                        "description": "successful operation"
                    }
                ], 
                "name": "post", 
                "summary": "Create user"
            }
        ]
    }, 
    {
        "path": "/api/stores/order/(.*)", 
        "name": "storesorderorderId", 
        "methods": [
            {
                "args": {
                    "body": [], 
                    "query": [], 
                    "formData": [], 
                    "header": [], 
                    "path": [
                        {
                            "description": "ID of the order that needs to be deleted", 
                            "required": true, 
                            "type": "string", 
                            "name": "orderId", 
                            "in": "path"
                        }
                    ]
                }, 
                "responses": [
                    {
                        "code": "404", 
                        "description": "Order not found"
                    }, 
                    {
                        "code": "400", 
                        "description": "Invalid ID supplied"
                    }
                ], 
                "name": "delete", 
                "summary": "Delete purchase order by ID"
            }, 
            {
                "args": {
                    "body": [], 
                    "query": [], 
                    "formData": [], 
                    "header": [], 
                    "path": [
                        {
                            "description": "ID of pet that needs to be fetched", 
                            "required": true, 
                            "type": "string", 
                            "name": "orderId", 
                            "in": "path"
                        }
                    ]
                }, 
                "responses": [
                    {
                        "code": "200", 
                        "description": "successful operation", 
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string", 
                                    "description": "Order Status"
                                }, 
                                "shipDate": {
                                    "type": "string", 
                                    "format": "date-time"
                                }, 
                                "complete": {
                                    "type": "boolean"
                                }, 
                                "petId": {
                                    "type": "integer", 
                                    "format": "int64"
                                }, 
                                "id": {
                                    "type": "integer", 
                                    "format": "int64"
                                }, 
                                "quantity": {
                                    "type": "integer", 
                                    "format": "int32"
                                }
                            }
                        }
                    }, 
                    {
                        "code": "404", 
                        "description": "Order not found"
                    }, 
                    {
                        "code": "400", 
                        "description": "Invalid ID supplied"
                    }
                ], 
                "name": "get", 
                "summary": "Find purchase order by ID"
            }
        ]
    }, 
    {
        "path": "/api/stores/order", 
        "name": "storesorder", 
        "methods": [
            {
                "args": {
                    "body": [
                        {
                            "schema": {
                                "properties": {
                                    "status": {
                                        "type": "string", 
                                        "description": "Order Status"
                                    }, 
                                    "shipDate": {
                                        "type": "string", 
                                        "format": "date-time"
                                    }, 
                                    "complete": {
                                        "type": "boolean"
                                    }, 
                                    "petId": {
                                        "type": "integer", 
                                        "format": "int64"
                                    }, 
                                    "id": {
                                        "type": "integer", 
                                        "format": "int64"
                                    }, 
                                    "quantity": {
                                        "type": "integer", 
                                        "format": "int32"
                                    }
                                }
                            }, 
                            "description": "order placed for purchasing the pet", 
                            "required": false, 
                            "name": "body", 
                            "in": "body"
                        }
                    ], 
                    "query": [], 
                    "formData": [], 
                    "header": [], 
                    "path": []
                }, 
                "responses": [
                    {
                        "code": "200", 
                        "description": "successful operation", 
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string", 
                                    "description": "Order Status"
                                }, 
                                "shipDate": {
                                    "type": "string", 
                                    "format": "date-time"
                                }, 
                                "complete": {
                                    "type": "boolean"
                                }, 
                                "petId": {
                                    "type": "integer", 
                                    "format": "int64"
                                }, 
                                "id": {
                                    "type": "integer", 
                                    "format": "int64"
                                }, 
                                "quantity": {
                                    "type": "integer", 
                                    "format": "int32"
                                }
                            }
                        }
                    }, 
                    {
                        "code": "400", 
                        "description": "Invalid Order"
                    }
                ], 
                "name": "post", 
                "summary": "Place an order for a pet"
            }
        ]
    }, 
    {
        "path": "/api/pets/findByTags", 
        "name": "petsfindByTags", 
        "methods": [
            {
                "args": {
                    "body": [], 
                    "query": [
                        {
                            "description": "Tags to filter by", 
                            "items": {
                                "type": "string"
                            }, 
                            "required": false, 
                            "collectionFormat": "multi", 
                            "in": "query", 
                            "type": "array", 
                            "name": "tags"
                        }
                    ], 
                    "formData": [], 
                    "header": [], 
                    "path": []
                }, 
                "responses": [
                    {
                        "code": "200", 
                        "description": "successful operation", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Pet"
                            }, 
                            "type": "array"
                        }
                    }, 
                    {
                        "code": "400", 
                        "description": "Invalid tag value"
                    }
                ], 
                "name": "get", 
                "summary": "Finds Pets by tags"
            }
        ]
    }, 
    {
        "path": "/api/pets/findByStatus", 
        "name": "petsfindByStatus", 
        "methods": [
            {
                "args": {
                    "body": [], 
                    "query": [
                        {
                            "description": "Status values that need to be considered for filter", 
                            "items": {
                                "type": "string"
                            }, 
                            "required": false, 
                            "collectionFormat": "multi", 
                            "in": "query", 
                            "type": "array", 
                            "name": "status"
                        }
                    ], 
                    "formData": [], 
                    "header": [], 
                    "path": []
                }, 
                "responses": [
                    {
                        "code": "200", 
                        "description": "successful operation", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Pet"
                            }, 
                            "type": "array"
                        }
                    }, 
                    {
                        "code": "400", 
                        "description": "Invalid status value"
                    }
                ], 
                "name": "get", 
                "summary": "Finds Pets by status"
            }
        ]
    }, 
    {
        "path": "/api/pets/(.*)", 
        "name": "petspetId", 
        "methods": [
            {
                "args": {
                    "body": [], 
                    "query": [], 
                    "formData": [
                        {
                            "description": "Updated name of the pet", 
                            "required": true, 
                            "type": "string", 
                            "name": "name", 
                            "in": "formData"
                        }, 
                        {
                            "description": "Updated status of the pet", 
                            "required": true, 
                            "type": "string", 
                            "name": "status", 
                            "in": "formData"
                        }
                    ], 
                    "header": [], 
                    "path": [
                        {
                            "description": "ID of pet that needs to be updated", 
                            "required": true, 
                            "type": "string", 
                            "name": "petId", 
                            "in": "path"
                        }
                    ]
                }, 
                "responses": [
                    {
                        "code": "405", 
                        "description": "Invalid input"
                    }
                ], 
                "name": "post", 
                "summary": "Updates a pet in the store with form data"
            }, 
            {
                "args": {
                    "body": [], 
                    "query": [], 
                    "formData": [], 
                    "header": [
                        {
                            "description": "", 
                            "required": true, 
                            "type": "string", 
                            "name": "api_key", 
                            "in": "header"
                        }
                    ], 
                    "path": [
                        {
                            "description": "Pet id to delete", 
                            "format": "int64", 
                            "required": true, 
                            "in": "path", 
                            "type": "integer", 
                            "name": "petId"
                        }
                    ]
                }, 
                "responses": [
                    {
                        "code": "400", 
                        "description": "Invalid pet value"
                    }
                ], 
                "name": "delete", 
                "summary": "Deletes a pet"
            }, 
            {
                "args": {
                    "body": [], 
                    "query": [], 
                    "formData": [], 
                    "header": [], 
                    "path": [
                        {
                            "description": "ID of pet that needs to be fetched", 
                            "format": "int64", 
                            "required": true, 
                            "in": "path", 
                            "type": "integer", 
                            "name": "petId"
                        }
                    ]
                }, 
                "responses": [
                    {
                        "code": "200", 
                        "description": "successful operation", 
                        "schema": {
                            "required": [
                                "name", 
                                "photoUrls"
                            ], 
                            "properties": {
                                "category": {
                                    "properties": {
                                        "id": {
                                            "type": "integer", 
                                            "format": "int64"
                                        }, 
                                        "name": {
                                            "type": "string"
                                        }
                                    }
                                }, 
                                "status": {
                                    "type": "string", 
                                    "description": "pet status in the store"
                                }, 
                                "name": {
                                    "type": "string", 
                                    "example": "doggie"
                                }, 
                                "tags": {
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer", 
                                                "format": "int64"
                                            }, 
                                            "name": {
                                                "type": "string"
                                            }
                                        }
                                    }, 
                                    "type": "array"
                                }, 
                                "photoUrls": {
                                    "items": {
                                        "type": "string"
                                    }, 
                                    "type": "array"
                                }, 
                                "id": {
                                    "type": "integer", 
                                    "format": "int64"
                                }
                            }
                        }
                    }, 
                    {
                        "code": "404", 
                        "description": "Pet not found"
                    }, 
                    {
                        "code": "400", 
                        "description": "Invalid ID supplied"
                    }
                ], 
                "name": "get", 
                "summary": "Find pet by ID"
            }
        ]
    }, 
    {
        "path": "/api/pets", 
        "name": "pets", 
        "methods": [
            {
                "args": {
                    "body": [
                        {
                            "schema": {
                                "required": [
                                    "name", 
                                    "photoUrls"
                                ], 
                                "properties": {
                                    "category": {
                                        "properties": {
                                            "id": {
                                                "type": "integer", 
                                                "format": "int64"
                                            }, 
                                            "name": {
                                                "type": "string"
                                            }
                                        }
                                    }, 
                                    "status": {
                                        "type": "string", 
                                        "description": "pet status in the store"
                                    }, 
                                    "name": {
                                        "type": "string", 
                                        "example": "doggie"
                                    }, 
                                    "tags": {
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer", 
                                                    "format": "int64"
                                                }, 
                                                "name": {
                                                    "type": "string"
                                                }
                                            }
                                        }, 
                                        "type": "array"
                                    }, 
                                    "photoUrls": {
                                        "items": {
                                            "type": "string"
                                        }, 
                                        "type": "array"
                                    }, 
                                    "id": {
                                        "type": "integer", 
                                        "format": "int64"
                                    }
                                }
                            }, 
                            "description": "Pet object that needs to be added to the store", 
                            "required": false, 
                            "name": "body", 
                            "in": "body"
                        }
                    ], 
                    "query": [], 
                    "formData": [], 
                    "header": [], 
                    "path": []
                }, 
                "responses": [
                    {
                        "code": "405", 
                        "description": "Validation exception"
                    }, 
                    {
                        "code": "404", 
                        "description": "Pet not found"
                    }, 
                    {
                        "code": "400", 
                        "description": "Invalid ID supplied"
                    }
                ], 
                "name": "put", 
                "summary": "Update an existing pet"
            }, 
            {
                "args": {
                    "body": [
                        {
                            "schema": {
                                "required": [
                                    "name", 
                                    "photoUrls"
                                ], 
                                "properties": {
                                    "category": {
                                        "properties": {
                                            "id": {
                                                "type": "integer", 
                                                "format": "int64"
                                            }, 
                                            "name": {
                                                "type": "string"
                                            }
                                        }
                                    }, 
                                    "status": {
                                        "type": "string", 
                                        "description": "pet status in the store"
                                    }, 
                                    "name": {
                                        "type": "string", 
                                        "example": "doggie"
                                    }, 
                                    "tags": {
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer", 
                                                    "format": "int64"
                                                }, 
                                                "name": {
                                                    "type": "string"
                                                }
                                            }
                                        }, 
                                        "type": "array"
                                    }, 
                                    "photoUrls": {
                                        "items": {
                                            "type": "string"
                                        }, 
                                        "type": "array"
                                    }, 
                                    "id": {
                                        "type": "integer", 
                                        "format": "int64"
                                    }
                                }
                            }, 
                            "description": "Pet object that needs to be added to the store", 
                            "required": false, 
                            "name": "body", 
                            "in": "body"
                        }
                    ], 
                    "query": [], 
                    "formData": [], 
                    "header": [], 
                    "path": []
                }, 
                "responses": [
                    {
                        "code": "405", 
                        "description": "Invalid input"
                    }
                ], 
                "name": "post", 
                "summary": "Add a new pet to the store"
            }
        ]
    }
]